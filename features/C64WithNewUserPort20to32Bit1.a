kBus24Bit_VideoLayer_HasOverscan=1
kBus24Bit_VideoLayer_ExpandedPalettes = 1
kBus24Bit_SpritesMaxNum = 32

!ct pet
!sal
!pdb "target/t.pdb"
!source "C64/stdlib/stdlib.a"
!source "C64/stdlib/LongBranches.a"
!source "C64/stdlib/PETSCII.a"
!source "BombJack/stdlib/Bus24Bit_Macros.a"
!source "BombJack/stdlib/Video_Macros.a"


*=$800
!zn
; The code "start" entry which initialises the stack is not called before this, which is fine for unit testing
; When running on a real C64 the "start" entry initialises the machine properly
start
	sei
	lda #ProcessorPortDefault
	jsr InitialiseMachine
	jsr TestInterface_Passthrough
	jsr Bus20To32Bit1_Init
	jsr TestInterface_WriteRAM
	jsr TestInterface_ReadRAM
.il1
	inc VIC2BorderColour
	jmp .il1


; If brk is encountered, then display a useful error
.errorMessage
	+MBASICTextPrint .errorMessageText
	; Display the stack
	pla
	jsr DisplayHex_Byte_A
	pla
	jsr DisplayHex_Byte_A
	pla
	jsr DisplayHex_Byte_A
	pla
	jsr DisplayHex_Byte_A
	; Lo then hi of encountered brk address plus a couple of bytes
	pla
	jsr DisplayHex_Byte_A
	pla
	jsr DisplayHex_Byte_A
.il2
	inc VIC2BorderColour
.il3
	inx
	bne .il3
	iny
	bne .il3
	jmp .il2

.errorMessageText
!pet CHR_Red , "** ERROR **" , CHR_Return , 0



TestInterface_Passthrough
	+M_RAMTAS
	+InitKERNALStringDisplay_AXY
	jsr CINT
	+SetDefaultScreenLowerCase_A

	+MWordValueToAddress_A .errorMessage , BRKServiceRoutineLo

	+MBASICTextPrint .bootedC64

	jsr Bus24Bit_Init
	jsr APU_ResetDisable

	jsr HardwareTest_VideoPattern0
	+MBASICTextPrint .testPatternDone

	lda #$cf
	jsr DisplayHex_Byte_A
	lda #CHR_Return
	jsr CHROUT

	jsr Video_WaitVBlank
	+MBASICTextPrint .gotVBlank

	rts

.bootedC64
!pet CHR_White , "C64 Booted" , CHR_Return , 0
.testPatternDone
!pet "HardwareTest VideoPattern0" , CHR_Return , 0
.gotVBlank
!pet "Got VBLank" , CHR_Return , 0

.writeDataComplete
!pet "Write data complete" , CHR_Return , 0

.readDataComplete
!pet "Read data complete" , CHR_Return , 0

.hexTab
!pet "0123456789ABCDEF"

DisplayHex_Byte_A
	pha
	lsr
	lsr
	lsr
	lsr
	tax
	lda .hexTab,x
	jsr CHROUT
	pla
	and #%1111
	tax
	lda .hexTab,x
	jmp CHROUT

TestInterface_WriteRAM
	jsr Bus20To32Bit1_SetLatch6
	ldx #0
.l1
	lda TestInterface_Passthrough,x
	+MBus24Bit_Send8BitValueFromA
	inx
	bne .l1

	+MBASICTextPrint .writeDataComplete

	rts


TestInterface_ReadRAM
	jsr Bus20To32Bit1_ShortReset

	jsr Bus20To32Bit1_ReadMode
	jsr Bus20To32Bit1_SetLatch5

	ldx #0
.l2
	+MBus24Bit_Get8BitValueToA
	cmp TestInterface_Passthrough,x
	beq .ok1
	; This useful, during the unit test it causes a test failure, using a real C64 an error message is displayed
	brk
	;+MDebugBreak
.ok1	
	inx
	bne .l2

	jsr Bus20To32Bit1_WriteMode

	+MBASICTextPrint .readDataComplete

	rts


Initialise_NoPreserveStack = 1
Initialise_NoIRQServiceRoutine = 1
Initialise_NoMACROWaitForTheLastScan = 1
!source "C64/stdlib/Initialise.a"
!source "BombJack/stdlib/Bus24Bit.a"
!source "BombJack/stdlib/Bus20To32Bit1.a"
!source "BombJack/stdlib/Video.a"
!source "BombJack/stdlib/HardwareTest.a"
!source "BombJack/stdlib/APU_Macros.a"
!source "BombJack/stdlib/APU.a"

